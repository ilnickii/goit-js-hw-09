{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAeH,EAAKE,cAAc,yBAExC,SAASE,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbN,EAAKc,iBAAiB,UAAWC,IAC/BA,EAAMC,iBACN,MAAMC,EAAQC,OAAOH,EAAMI,OAAOC,SAASd,MAAMe,OAC3CC,EAAOJ,OAAOH,EAAMI,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOH,EAAMI,OAAOC,SAASG,OAAOF,OAEnDN,EAAMI,OAAOK,QAEb,IAAIC,EAAiB,EAErBtB,EAAauB,UAAW,EAExB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQI,IAAK,CAG/BvB,EAFiBuB,EAAI,EACAV,EAAQU,EAAIL,GAE9BM,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBR,EAAA+B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEhEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBR,EAAA+B,OAAOG,QAAQ,sBAAoB3B,QAAeC,MAAU,IAE7D2B,SAAQ,KACPR,IAEIA,IAAmBF,IACrBpB,EAAauB,UAAW,EAAK,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst submitButton = form.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n  const delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n\n  event.target.reset();\n\n  let completedCount = 0; \n\n  submitButton.disabled = true;\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const promiseDelay = delay + i * step;\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n      .finally(() => {\n        completedCount++;\n\n        if (completedCount === amount) {\n          submitButton.disabled = false;\n        }\n      });\n  }\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$submitButton","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","target","elements","value","step","amount","reset","completedCount","disabled","i","then","Notify","success","catch","failure","finally"],"version":3,"file":"03-promises.c57df3ad.js.map"}